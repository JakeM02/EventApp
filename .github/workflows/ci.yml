# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: event_app_test
          POSTGRES_USER: event_admin
          POSTGRES_PASSWORD: admin
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://event_admin:admin@localhost:5432/event_app_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Prepare test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://event_admin:admin@localhost:5432/event_app_test
        run: bin/rails db:test:prepare
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://event_admin:admin@localhost:5432/event_app_test
        run: |
          bin/rails test
          bin/rails test:system

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Generate binstubs
        run: bundle binstubs bundler-audit brakeman rubocop
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --auto-correct-all --disable-uncorrectable
